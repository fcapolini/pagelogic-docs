<lib>
<link rel="stylesheet" href="/parts/gitbook-md.css"/>

<:define tag="gitbook-md:markdown-it"
  :doc="README.md"
  :data={mdData.content}

  :prepro={(s) => {
    s = fixTitle(s);
    s = fixExtensions(s);
    return s;
  }}

  :postpro={(dom) => {
    const ee = dom.querySelectorAll('iframe');
    for (let e of ee) {
      e.onload = () => e.style.opacity = 1;
    }
  }}

  :fixTitle={(s) => {
    let descr, title;

    function extractDescr(s) {
      let i1, i2, i3;
      if (/^\s*---/.test(s)) {
        i1 = s.indexOf('---');
        i2 = s.indexOf('description:', i1 + 3);
        i3 = s.indexOf('---', i1 + 3);
        i2 > 0 && i3 > 0 && i2 < i3 && (descr = s.substring(i2 + 'description:'.length, i3).trim());
        i3 > 0 && (s = s.substring(i3 + 3));
      }
      return s;
    }

    function extractTitle(s) {
      let i1 = s.indexOf('\n# ');
      let i2 = (i1 >= 0 ? s.indexOf('\n', i1 + 3) : -1);
      i2 >= 0 && (title = s.substring(i1 + 3, i2));
      i2 >= 0 && (s = s.substring(i2 + 1));
      return s;
    }

    s = extractDescr(s);
    s = extractTitle(s);

    let s2 = '';
    title && (s2 = `\n# ${title}\n`);
    descr && (s2 += `> ${descr}\n`);
    s = s2 + s;

    return s;
  }}

  :fixExtensions={(s) => {
    const re = /\{% embed url="(.+?)" %\}/g;
    const p = [];
    let i = 0;
    for (let res; !!(res = re.exec(s));) {
      res.index > i && (p.push(s.substring(i, res.index)));
      i = res.index + res[0].length;
      p.push(`<iframe src="${res[1]}" loading="lazy"></iframe>`);
    }
    if (i < s.length) {
      p.push(s.substring(i));
    }
    return p.join('');
  }}>
  <pl-data :aka="mdData" :url={`/markdown/${doc}`} :type="text"/>
</:define>

</lib>
